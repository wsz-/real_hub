(defun square (x)
  (* x x))
(defun square-list-1 (lst)
  (defun iter-1 (item result)
    ;; (if (equalp nil item)
    (if (equalp nil item)
	result
      (iter (cdr item)
	    (cons result
		  (square (car item))))))
  (iter-1 lst nil))
(defun square-list (lst)
  (defun iter (item result)
    ;; (if (equalp nil item)
    (if (equalp nil item)
	result
      (iter (cdr item)
	    (cons (square (car item))
		  result))))
  (iter lst nil))
(square-list '(1 2))
(4 1)
(square-list-1 '(1 2))
(4 nil . 1)
((nil . 1) . 4)
(cons (square (car (cdr '(1 2)))) nil)
